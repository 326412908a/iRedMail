-- Add 5 new columns (and indexes) in `msgs` table for easier queries.
--
-- Simplified SQL commands:
--
-- ALTER TABLE msgs ADD COLUMN rid BIGINT UNSIGNED NOT NULL;
-- ALTER TABLE msgs ADD COLUMN sender VARCHAR(255) NOT NULL DEFAULT '';
-- ALTER TABLE msgs ADD COLUMN sender_domain VARCHAR(255) NOT NULL DEFAULT '';
-- ALTER TABLE msgs ADD COLUMN recipient VARCHAR(255) NOT NULL DEFAULT '';
-- ALTER TABLE msgs ADD COLUMN recipient_domain VARCHAR(255) NOT NULL DEFAULT '';
--
-- CREATE INDEX msgs_idx_rid ON msgs (rid);
-- CREATE INDEX msgs_idx_sender_domain ON msgs (sender_domain);
-- CREATE INDEX msgs_idx_sender_domain ON msgs (sender_domain);
-- CREATE INDEX msgs_idx_recipient ON msgs (recipient);
-- CREATE INDEX msgs_idx_recipient_domain ON msgs (recipient_domain);

-- MySQL doesn't support `ALTER TABLE <table> ADD COLUMN IF NOT EXISTS <column> ...`
-- so we use alter syntax to achieve this.

-- msgs.rid
DROP PROCEDURE IF EXISTS `?`;
DELIMITER //
CREATE PROCEDURE `?`()
BEGIN
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION BEGIN END;
    ALTER TABLE `msgs` ADD COLUMN `rid` BIGINT UNSIGNED NOT NULL DEFAULT 0;
    CREATE INDEX `msgs_idx_rid` ON `msgs` (`rid`);
END //
DELIMITER ;
CALL `?`();
DROP PROCEDURE `?`;

-- msgs.sender
DROP PROCEDURE IF EXISTS `?`;
DELIMITER //
CREATE PROCEDURE `?`()
BEGIN
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION BEGIN END;
    ALTER TABLE `msgs` ADD COLUMN `sender` VARCHAR(255) NOT NULL DEFAULT '';
    CREATE INDEX `msgs_idx_sender` ON `msgs` (`sender`);
END //
DELIMITER ;
CALL `?`();
DROP PROCEDURE `?`;

-- msgs.sender_domain
DROP PROCEDURE IF EXISTS `?`;
DELIMITER //
CREATE PROCEDURE `?`()
BEGIN
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION BEGIN END;
    ALTER TABLE `msgs` ADD COLUMN `sender_domain` VARCHAR(255) NOT NULL DEFAULT '';
    CREATE INDEX `msgs_idx_sender_domain` ON `msgs` (`sender_domain`);
END //
DELIMITER ;
CALL `?`();
DROP PROCEDURE `?`;

-- msgs.recipient
DROP PROCEDURE IF EXISTS `?`;
DELIMITER //
CREATE PROCEDURE `?`()
BEGIN
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION BEGIN END;
    ALTER TABLE `msgs` ADD COLUMN `recipient` VARCHAR(255) NOT NULL DEFAULT '';
    CREATE INDEX `msgs_idx_recipient` ON `msgs` (`recipient`);
END //
DELIMITER ;
CALL `?`();
DROP PROCEDURE `?`;

-- msgs.recipient_domain
DROP PROCEDURE IF EXISTS `?`;
DELIMITER //
CREATE PROCEDURE `?`()
BEGIN
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION BEGIN END;
    ALTER TABLE `msgs` ADD COLUMN `recipient_domain` VARCHAR(255) NOT NULL DEFAULT '';
    CREATE INDEX `msgs_idx_recipient_domain` ON `msgs` (`recipient_domain`);
END //
DELIMITER ;
CALL `?`();
DROP PROCEDURE `?`;

--
-- Trigger used to to insert `msgs.sender` and `msgs.sender_domain`.
--
-- DROP TRIGGER IF EXISTS update_msgs_sender_addresses;
DELIMITER $$
CREATE TRIGGER update_msgs_sender_addresses
BEFORE INSERT
ON msgs FOR EACH ROW
BEGIN
    DECLARE v_email VARCHAR(255);
    SELECT email_raw INTO v_email FROM maddr WHERE id = NEW.sid LIMIT 1;

    SET NEW.sender = v_email;
    SET NEW.sender_domain = SUBSTRING_INDEX(v_email, '@', -1);
END$$
DELIMITER ;

--
-- Trigger used to insert `msgs.rid`, `msgs.recipient` and `msgs.recipient_domain`.
--
-- Note: must be 'AFTER INSERT'.
-- DROP TRIGGER IF EXISTS update_msgs_rcpt_addresses;
DELIMITER $$
CREATE TRIGGER update_msgs_rcpt_addresses
AFTER INSERT
ON msgrcpt FOR EACH ROW
BEGIN
    DECLARE v_email VARCHAR(255);
    SELECT email_raw INTO v_email FROM maddr WHERE id = NEW.rid LIMIT 1;

    UPDATE msgs SET rid=NEW.rid,recipient=v_email,recipient_domain=SUBSTRING_INDEX(v_email, '@', -1) WHERE mail_id=NEW.mail_id;
END$$
DELIMITER ;
